{{- $pkg := CapitalizeIdentifier .PackageSuffix }}
{{- range (JoinHandlers .Functions .Sinks) }}
{{- $t := .Signature.TestingT }}
func Test{{ $pkg }}_{{ .Name }}(t *testing.T) {
	// TO{{/**/}}DO: Test {{ .Name }}
	t.Parallel()
	// ctx := Context()
	/*
	{{ .Name }}(ctx {{- range .Signature.InputArgs }}, {{ .Name }}{{ end }})
	{{- if .Signature.OutputArgs }}
		.Expect({{ $t }} {{- range .Signature.OutputArgs }}, {{ .Name }}{{ end }})
	{{- end }}
		.NoError(t)
		.Error(t, errContains)
	*/
}
{{ end }}

{{- range .Webs }}
func Test{{ $pkg }}_{{ .Name }}(t *testing.T) {
	// TO{{/**/}}DO: Test {{ .Name }}
	t.Parallel()
	// ctx := Context()
	/*
	{{ .Name }}(ctx, POST(body), ContentType(mime), QueryArg(n, v), Header(n, v))
		.StatusOK(t)
		.StatusCode(t, statusCode)
		.BodyContains(t, bodyContains)
		.BodyNotContains(t, bodyNotContains)
		.NoError(t)
		.Error(t, errContains)
	*/
}
{{ end }}

{{- range .Tickers }}
func Test{{ $pkg }}_{{ .Name }}(t *testing.T) {
	// TO{{/**/}}DO: Test {{ .Name }}
	t.Parallel()
	// ctx := Context()
	/*
	{{ .Name }}(ctx)
		.NoError(t)
		.Error(t, errContains)
	*/
}
{{ end }}