// Code generated by Microbus. DO NOT EDIT.

package {{ .ShortPackage }}api

// Client provides type-safe access to the endpoints of the "{{ .General.Host }}" microservice.
// This simple version is for unicast calls.
type Client struct {
	svc  Service
	host string
}

// NewClient creates a new unicast client to the "{{ .General.Host }}" microservice.
func NewClient(caller Service) *Client {
	return &Client{
		svc:  caller,
		host: "{{ .General.Host }}",
	}
}

// ForHost replaces the default host name of this client.
func (_c *Client) ForHost(host string) *Client {
	_c.host = host
	return _c
}

// MulticastClient provides type-safe access to the endpoints of the "{{ .General.Host }}" microservice.
// This advanced version is for multicast calls.
type MulticastClient struct {
	svc  Service
	host string
}

// NewMulticastClient creates a new multicast client to the "{{ .General.Host }}" microservice.
func NewMulticastClient(caller Service) *MulticastClient {
	return &MulticastClient{
		svc:  caller,
		host: "{{ .General.Host }}",
	}
}

// ForHost replaces the default host name of this client.
func (_c *MulticastClient) ForHost(host string) *MulticastClient {
	_c.host = host
	return _c
}
