// Code generated by Microbus. DO NOT EDIT.

/*
Package configurator implements the configurator.sys microservice.

The Configurator is a system microservice that centralizes the dissemination of configuration values to other microservices.
*/
package configurator

import (
	"context"
	"net/http"
	"time"

	"github.com/microbus-io/fabric/connector"
	"github.com/microbus-io/fabric/errors"

	"github.com/microbus-io/fabric/services/configurator/intermediate"
	"github.com/microbus-io/fabric/services/configurator/configuratorapi"
)

var (
	_ context.Context
	_ *http.Request
	_ time.Duration
	_ *connector.Connector
	_ *errors.TracedError
	_ *configuratorapi.Client
)

// The default host name of the microservice is configurator.sys.
const HostName = "configurator.sys"

// NewService creates a new configurator.sys microservice.
func NewService() *Service {
	s := &Service{}
	s.Intermediate = intermediate.New(s, Version)
	return s
}
