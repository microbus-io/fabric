// Code generated by Microbus. DO NOT EDIT.

/*
Package eventsink implements the eventsink.example microservice.

The event sink microservice handles events that are fired by the event source microservice.
*/
package eventsink

import (
	"context"
	"net/http"
	"time"

	"github.com/microbus-io/fabric/connector"
	"github.com/microbus-io/fabric/errors"

	"github.com/microbus-io/fabric/examples/eventsink/intermediate"
	"github.com/microbus-io/fabric/examples/eventsink/eventsinkapi"
)

var (
	_ context.Context
	_ *http.Request
	_ time.Duration
	_ connector.Service
	_ *errors.TracedError
	_ *eventsinkapi.Client
)

// The default host name of the microservice is eventsink.example.
const HostName = "eventsink.example"

// NewService creates a new eventsink.example microservice.
func NewService() connector.Service {
	s := &Service{}
	s.Intermediate = intermediate.NewService(s, Version)
	return s
}

// Mock is a mockable version of the eventsink.example microservice,
// allowing functions, sinks and web handlers to be mocked.
type Mock = intermediate.Mock

// New creates a new mockable version of the microservice.
func NewMock() *Mock {
	return intermediate.NewMock(Version)
}
