// Code generated by Microbus. DO NOT EDIT.

package blank

import "github.com/microbus-io/fabric/examples/blank/intermediate"

// NewService creates a new "blank.example" microservice.
func NewService() *Service {
	s := &Service{}
	s.Intermediate = intermediate.New(s, Version)
	return s
}

// Config initializers
var (
	// MySQL initializes the "MySQL" config property of the microservice.
	MySQL = intermediate.MySQL
	// Alert initializes the "Alert" config property of the microservice.
	Alert = intermediate.Alert
)

/*
With initializes the config properties of the microservice for testings purposes.

	blankSvc := blank.NewService().With(...)
*/
func (svc *Service) With(initializers ...intermediate.Initializer) *Service {
	svc.Intermediate.With(initializers...)
	return svc
}
